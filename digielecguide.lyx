#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Ανάλυση και σχεδιασμός σύγχρονων ακολουθιακών κυκλωμάτων
\end_layout

\begin_layout Part*
Βασικές έννοιες
\end_layout

\begin_layout Part*
Μεθοδολογία
\end_layout

\begin_layout Standard
Παρακάτω παρουσιάζεται η βασική μεθοδολογία ανάλυσης και σχεδιασμού, ενός
 τυπικού παραδείγματος σύγχρονου ακολουθιακού κυκλώματος.
 Στις εξετάσεις, συχνά μας δίνεται η 
\series bold
λεκτική περιγραφή
\series default
 του προβλήματος, και απαιτείται από εμάς να ακολουθήσουμε τα βήματα της
 μεθοδολογίας, για να σχεδιάσουμε τελικά το 
\series bold
λογικό διαγράμμα
\series default
 του κυκλώματος (παραλλαγές, για έρευνα και περαιτέρω εξάσκηση, δίνονται
 άλυτες στο τέλος του κεφαλαίου της Μεθοδολογίας).
\end_layout

\begin_layout Section
Λεκτική περιγραφή
\end_layout

\begin_layout Standard
Δίνεται η εκφώνηση:
\end_layout

\begin_layout Paragraph
Να σχεδιαστεί σύγχρονο ακολουθιακό κύκλωμα με JK flip-flop, το οποίο για
 είσοδο 0, να μεταβαίνει διαδοχικά στις καταστάσεις 5, 6, 4, 2, 0, 1, 3,
 5, 6...
 και για είσοδο 1, στις καταστάσεις 4, 1, 3, 6, 5, 0, 2, 4, 1....
 Η απλοποίηση των χαρακτηριστικών εξισώσεων να γίνει με 2 μεθόδους (χάρτης
 Karnaugh, άλγεβρα Boole).
\begin_inset Newline linebreak
\end_inset


\begin_inset Newline linebreak
\end_inset


\end_layout

\begin_layout Standard
Πρώτο μας βήμα, είναι να δώσουμε όνομα στις εισόδους και στις καταστάσεις
 του κυκλώματος.
 Το κείμενο λύσης της άσκησης θα δίνεται σε διακριτές παραγράφους, σε πλάγια
 γραφή:
\end_layout

\begin_layout Quote

\emph on
Ονομάζουμε x την είσοδο, και S
\begin_inset script subscript

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

, S
\begin_inset script subscript

\begin_layout Plain Layout

\emph on
1
\end_layout

\end_inset

, S
\begin_inset script subscript

\begin_layout Plain Layout

\emph on
2
\end_layout

\end_inset

, S
\begin_inset script subscript

\begin_layout Plain Layout

\emph on
3
\end_layout

\end_inset

, S
\begin_inset script subscript

\begin_layout Plain Layout

\emph on
4
\end_layout

\end_inset

, S
\begin_inset script subscript

\begin_layout Plain Layout

\emph on
5
\end_layout

\end_inset

, S
\begin_inset script subscript

\begin_layout Plain Layout

\emph on
6
\end_layout

\end_inset

 τις καταστάσεις 0, 1, 2, 3, 4, 5, 6 αντίστοιχα.
\end_layout

\begin_layout Section
Σχεδιασμός διαγράμματος καταστάσεων
\end_layout

\begin_layout Standard
Στο διάγραμμα καταστάσεων, οι καταστάσεις S αναπαρίστανται ως κύκλοι, και
 οι μεταβάσεις, για x=1 ή x=0, ως κατευθυνόμενα βέλη που συνδέουν τις διάδοχες
 καταστάσεις (αφήστε λίγο επιπλέον χώρο εντός των κύκλων, για να συμπληρώσετε
 αργότερα τις δυαδικές αναπαραστάσεις των καταστάσεων): 
\end_layout

\begin_layout Quote

\emph on
Σχεδιάζουμε το διάγραμμα καταστάσεων:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename /home/thcloak/src/digielecguide/statediagram.gv
	scale 50

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Section
Κωδικοποίηση καταστάσεων κυκλώματος σε συνδυασμούς καταστάσεων flip-flop
\end_layout

\begin_layout Standard
Σε αυτό το σημείο, επιδιώκουμε να αναπαραστήσουμε κάθε κατάσταση S ως αλληλουχία
 δυαδικών ψηφίων.
 Καθώς έχουμε 7 καταστάσεις, χρειαζόμαστε τουλάχιστον 3 bit για να τις αναπαραστ
ήσουμε.
 Αυτό, προφανώς επειδή 2
\begin_inset script superscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

= 4 δεν φτάνουν οι συνδυασμοί, ενώ 2
\begin_inset script superscript

\begin_layout Plain Layout
3
\end_layout

\end_inset

= 8 ένας συνδυασμός περισσεύει.
 Αυτό όμως δε μας πειράζει.
 Κάθε δυαδικό ψηφίο, στο κύκλωμα μας θα αντιπροσωπεύει ένα flip-flop.
 Έτσι, λέμε:
\begin_inset Newline linebreak
\end_inset


\begin_inset Wrap table
lines 0
placement o
overhang 0in
width "30col%"
status open

\begin_layout Plain Layout

\series bold
\size larger
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="0pt">
<row bottomspace="3mm">
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
S
\begin_inset script subscript

\begin_layout Plain Layout

\size larger
0
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
000
\end_layout

\end_inset
</cell>
</row>
<row bottomspace="3mm">
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
S
\begin_inset script subscript

\begin_layout Plain Layout

\size larger
1
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
001
\end_layout

\end_inset
</cell>
</row>
<row bottomspace="3mm">
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
S
\begin_inset script subscript

\begin_layout Plain Layout

\size larger
2
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
010
\end_layout

\end_inset
</cell>
</row>
<row bottomspace="3mm">
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
S
\begin_inset script subscript

\begin_layout Plain Layout

\size larger
3
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
011
\end_layout

\end_inset
</cell>
</row>
<row bottomspace="3mm">
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
S
\begin_inset script subscript

\begin_layout Plain Layout

\size larger
4
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
100
\end_layout

\end_inset
</cell>
</row>
<row bottomspace="3mm">
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
S
\begin_inset script subscript

\begin_layout Plain Layout

\size larger
5
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
101
\end_layout

\end_inset
</cell>
</row>
<row bottomspace="3mm">
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
S
\begin_inset script subscript

\begin_layout Plain Layout

\size larger
6
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
110
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size larger
111
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Quote

\emph on
Κωδικοποιούμε τις καταστάσεις μας S
\begin_inset script subscript

\begin_layout Plain Layout

\emph on
0
\end_layout

\end_inset

- S
\begin_inset script subscript

\begin_layout Plain Layout

\emph on
6
\end_layout

\end_inset

 ως συνδυασμούς δυαδικών ψηφίων
\emph default
.
 
\end_layout

\begin_layout Quote

\emph on
Έχουμε 7 καταστάσεις, επομένως θα χρειαστούμε 3bit για να έχουμε διακριτούς
 συνδυασμούς για όλες τις καταστάσεις, Αυτό επειδή 2
\begin_inset script superscript

\begin_layout Plain Layout

\emph on
3
\end_layout

\end_inset

= 8 ≥ 7.
 Αντιστοιχίζουμε:
\end_layout

\begin_layout Section
Σχεδιασμός πίνακα καταστάσεων
\end_layout

\begin_layout Section
Εξαγωγή εξίσωσης εξόδου και εξισώσεων εισόδων
\end_layout

\begin_layout Subsection
Με χρήση πίνακα Karnaugh
\end_layout

\begin_layout Subsection
Με άλγεβρα Boole
\end_layout

\begin_layout Standard

\shape italic
Η ακόλουθη μέθοδος είναι προαιρετική.
 Εάν δεν έχετε χρόνο, προσπεράστε την.
\end_layout

\begin_layout Paragraph
Οι εξισώσεις εξόδου και εισόδων μπορούν να εξαχθούν κατευθείαν από τον πίνακα
 καταστάσεων.
 Αυτό γίνεται ως εξής:
\end_layout

\begin_layout Enumerate
Επιλέγουμε τον όρο για τον οποίο θα βγάλουμε τη χαρακτηριστική εξίσωση (π.χ.
 έξοδος y, είσοδος D
\begin_inset script subscript

\begin_layout Plain Layout
Α
\end_layout

\end_inset

ενός D flip-flop).
\end_layout

\begin_layout Enumerate
Βρίσκουμε τις γραμμές του πίνακα καταστάσεων στις οποίες ο επιλεγμένος όρος
 είναι ίσος με 1.
 
\end_layout

\begin_layout Enumerate
Γράφουμε την εξίσωση ως εξής:
\end_layout

\begin_layout Subparagraph
Κάθε μια εκ των γραμμών αντιστοιχεί σε ένα μονώνυμο (δλδ ένα γινόμενο παραγόντων
) του δεξιού μέρους της εξίσωσης.
 Το άθροισμα αυτών των μονωνύμων αποτελεί το δεξί μέρος της εξίσωσης.
 
\end_layout

\begin_layout Subparagraph
Κάθε όρος που στη συγκεκριμένη γραμμή ισούται με 1, εισάγεται ως παράγοντας
 του αντίστοιχου μονωνύμου.
 Κάθε όρος που στη συγκεκριμένη γραμμη ισούται με 0, εισάγεται ως το συμπλήρωμα
 (π.χ.
 Α') του εαυτού του.
\end_layout

\begin_layout Paragraph
Π.χ.
 Έχουμε ένα κύκλωμα με 2 D flip-flop, που ονομάζουμε Α,Β, για το οποίο έ
 
\end_layout

\begin_layout Section
Σχεδιασμός λογικού διαγράμματος
\end_layout

\begin_layout Standard
i.
 ΣΧΕΔΙΑΣΜΟΣ ΚΥΚΛΩΜΑΤΟΣ ΜΕ ΕΞΟΔΟ
\end_layout

\begin_layout Standard
Σημαντικές επεκτάσεις αυτής της μεθοδολογίας, οι οποίες δεν αναφέρονται
 εδώ, αφορούν προβλήματα με πολλαπλές εισόδους (Χ
\begin_inset script subscript

\begin_layout Plain Layout
1
\end_layout

\end_inset

,Χ
\begin_inset script subscript

\begin_layout Plain Layout
2
\end_layout

\end_inset

,Χ
\begin_inset script subscript

\begin_layout Plain Layout
n
\end_layout

\end_inset

), και προβλήματα όπου το output y(t) επηρεάζει τις καταστάσεις των flip-flop
 σε χρόνο (t+1).
 Κυκλώματα με τέτοια χαρακτηριστικά, συνήθως, σχεδιάζονται με τη βοήθεια
 υπολογιστή, με τη χρήση της γλώσσας HDL.
 Δεν αποκλείεται ωστόσο σε μια βατή εξέταση να συναντήσετε, ως δευτερεύον
 θέμα, κύκλωμα πολλαπλών εισόδων.
\end_layout

\end_body
\end_document
